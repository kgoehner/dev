# ansible-playbook -i inventory.ini playbook.yml --ask-become-pass
---
- name: Install Homebrew
  hosts: localhost
  tasks:
  - name: Install
    ansible.builtin.shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    args:
      creates: /opt/homebrew/bin/brew
    become: yes

- name: Homebrew Global Installs
  hosts: localhost
  tasks:
  - name: Brew Installs
    community.general.homebrew:
      name: "{{ item }}"
      state: present
    with_list:
    - tmux
    - neovim
    - awscli
    - fzf
    - git
    - git-lfs
    - gitleaks
    - bat
    - jq
    - yq
    - pipx
    - midnight-commander
    - mise
    - hatch
    - ripgrep
    - tokei
    - todo-txt
    - luarocks
    - wget
    - fd
    - xh
    - zoxide
    - starship
    - stow
    - ffmpeg
    - gifsicle
    - sqlite
    - kubectl
    - zk


- name: TPM (tmux plugin manager)
  hosts: localhost
  tasks:
  - name: Download TPM
    ansible.builtin.git:
      repo: https://github.com/tmux-plugins/tpm.git
      dest: env/config/tmux/plugins/tpm
    environment:
      GIT_TERMINAL_PROMPT: 0


- name: Mise Installs
  hosts: localhost
  tasks:
  - name: Install NPM
    ansible.builtin.command:
      cmd: "mise use -g node"
  - name: Install Python
    ansible.builtin.command:
      cmd: "mise use -g python"


- name: Pipx Installs
  hosts: localhost
  tasks:
  - name: Install pipx tools
    community.general.pipx:
      executable: pipx
      name: "{{ item }}"
      state: present
    with_list:
      - hatch
      - poetry 
      - black 
      - isort


- name: Setup Config
  hosts: localhost
  tasks:
  - name: Include main vars
    ansible.builtin.include_vars:
      file: vars.yml
  - name: Find all files in env/config
    ansible.builtin.find:
      paths: "{{ playbook_dir }}/env/config"
      file_type: any
    register: config
  - name: Create symlinks to ~/.config
    ansible.builtin.file:
      src: "{{ item.path }}"
      path: "{{ home }}/.config/{{ item.path | basename }}"
      owner: "{{ username }}"
      mode: "0755"
      state: link
    with_items: "{{ config.files }}"


- name: Setup Share
  hosts: localhost
  tasks:
  - name: Include main vars
    ansible.builtin.include_vars:
      file: vars.yml
  - name: Find all files in env/local/share
    ansible.builtin.find:
      paths: "{{ playbook_dir }}/env/local/share"
      file_type: file
    register: share
  - name: Create symlinks to ~/.local/share
    ansible.builtin.file:
      src: "{{ item.path }}"
      path: "{{ home }}/.local/share/{{ item.path | basename }}"
      owner: "{{ username }}"
      state: link
    with_items: "{{ share.files }}"


- name: Setup Bin
  hosts: localhost
  tasks:
  - name: Include main vars
    ansible.builtin.include_vars:
      file: vars.yml
  - name: Find all files in env/local/bin
    ansible.builtin.find:
      paths: "{{ playbook_dir }}/env/local/bin"
      file_type: file
    register: bin
  - name: Create symlinks to ~/.local/bin
    ansible.builtin.file:
      src: "{{ item.path }}"
      path: "{{ home }}/.local/bin/{{ item.path | basename }}"
      owner: "{{ username }}"
      state: link
    with_items: "{{ bin.files }}"


- name: Platform Installs
  hosts: all
  tasks:
    - name: OSX Installs
      ansible.builtin.import_tasks: "osx_tasks.yml"
      when: ansible_facts["os_family"] == "Darwin"
    - name: Linux Installs
      ansible.builtin.import_tasks: "linux_tasks.yml"
      when: ansible_facts["os_family"] == "RedHat"


- name: Update Homebrew
  hosts: localhost
  tasks:
  - name: Update
    community.general.homebrew:
      update_homebrew: true
      upgrade_all: true


- name: Rust
  hosts: localhost
  tags:
    - rust
  tasks:
  - name: Check if cargo is installed
    ansible.builtin.shell: command -v cargo
    register: cargo_exists
    ignore_errors: yes
  - name: Download Installer
    when: cargo_exists is failed
    get_url:
      url: https://sh.rustup.rs
      dest: /tmp/sh.rustup.rs
      mode: '0755'
      force: 'yes'
  - name: Install Cargo
    when: cargo_exists is failed
    ansible.builtin.shell: /tmp/sh.rustup.rs -y
